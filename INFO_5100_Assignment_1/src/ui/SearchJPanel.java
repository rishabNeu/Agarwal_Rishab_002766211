/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.EmployeeHistory;

/**
 *
 * @author Rishab
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    EmployeeHistory empHistory;

    public SearchJPanel(EmployeeHistory history) {
        initComponents();
        empHistory = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSearchById = new javax.swing.JLabel();
        txtSearchById = new javax.swing.JTextField();
        lblSearchTitle = new javax.swing.JLabel();
        lblSearchByName = new javax.swing.JLabel();
        txtSearchByName = new javax.swing.JTextField();
        btnSearchOperation = new javax.swing.JButton();
        comboSearch = new javax.swing.JComboBox<>();
        txtComboValue = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployees = new javax.swing.JTable();

        lblSearchById.setText("Enter an ID :");

        txtSearchById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchByIdActionPerformed(evt);
            }
        });

        lblSearchTitle.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblSearchTitle.setText("Search an Employee");

        lblSearchByName.setText("Enter a Name :");

        txtSearchByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchByNameActionPerformed(evt);
            }
        });

        btnSearchOperation.setText("Search");
        btnSearchOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchOperationActionPerformed(evt);
            }
        });

        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Id", "Age", " " }));

        txtComboValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComboValueActionPerformed(evt);
            }
        });

        tblEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position", "Mobile no", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmployees);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearchByName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearchById)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchById, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)))
                .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtComboValue, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(btnSearchOperation)
                .addGap(148, 148, 148))
            .addGroup(layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(lblSearchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblSearchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchById)
                    .addComponent(txtSearchById, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchOperation)
                    .addComponent(txtComboValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchByName)
                    .addComponent(txtSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(162, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchByIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchByIdActionPerformed

    private void txtSearchByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchByNameActionPerformed


    }//GEN-LAST:event_txtSearchByNameActionPerformed

    private void btnSearchOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchOperationActionPerformed

        
        boolean isPresent = false;
        //list we got now 
        ArrayList<Employee> empList = empHistory.getEmpList();

        
        String comboSearchType = comboSearch.getSelectedItem().toString();
        
        String comboValue = txtComboValue.getText();
        
        ArrayList<Employee> searchedEmployeeList = new ArrayList<>();
        
        if(comboSearchType.equalsIgnoreCase("Name"))
        {
            for (Employee employee : empList) {
                  if ( employee.getName().contains(comboValue)) {

                      searchedEmployeeList.add(employee);
                      isPresent = true;
                  }
            }
        }
        else if(comboSearchType.equalsIgnoreCase("Id")){
              for (Employee employee : empList) {

                if (Integer.parseInt(comboValue) == employee.getEmpId()) {

                    searchedEmployeeList.add(employee);
                    isPresent = true;
                    //photo , start date and gender remaining
                }
                

            }
         }
         else if(comboSearchType.equalsIgnoreCase("Age")){
              for (Employee employee : empList) {

                if (Integer.parseInt(comboValue) == employee.getAge()) {

                    searchedEmployeeList.add(employee);
                    isPresent = true;
       
                    //photo , start date and gender remaining
                }
                

            }
         }
        
        
        if(isPresent==false){
            JOptionPane.showMessageDialog(null,"No Records found");
            return;
        }
        
        
        DefaultTableModel model = (DefaultTableModel)tblEmployees.getModel();
        
        model.setRowCount(0);
        
        for (Employee emp : searchedEmployeeList) {
           Object[] row = new Object[10];        
           row[0] = emp;
           row[1] = emp.getEmpId();
           row[2]= emp.getAge();
           row[3] = emp.getGender();
           row[4]= emp.getStartDate();
           row[5] = emp.getLevel();
           row[6]= emp.getTeamInfo();
           row[7] = emp.getPositionTitle();
           row[8]= emp.getMobileNo();
           row[9]= emp.getEmail();
        
           model.addRow(row);   
            
        }
        
        
        
        
        
        
        //need to iterate and find the match for id

        
       


    }//GEN-LAST:event_btnSearchOperationActionPerformed

    private void txtComboValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComboValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComboValueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchOperation;
    private javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearchById;
    private javax.swing.JLabel lblSearchByName;
    private javax.swing.JLabel lblSearchTitle;
    private javax.swing.JTable tblEmployees;
    private javax.swing.JTextField txtComboValue;
    private javax.swing.JTextField txtSearchById;
    private javax.swing.JTextField txtSearchByName;
    // End of variables declaration//GEN-END:variables
}
